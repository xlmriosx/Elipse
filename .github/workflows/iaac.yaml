name: aprovision-kubernetes-structure

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "iaac" ]
  pull_request:
    branches: [ "iaac" ]
  workflow_dispatch:
    inputs:
      # Allow manual triggering of a workflow run.
      # This is useful for testing and debugging.
      manual_trigger:
        description: 'Trigger a workflow aprovision mysql manually'
        required: false
        default: 'false'

jobs:
  k3s:
    runs-on: ubuntu-latest
    steps:
    # Setting permissions
    - name: "Setting up k3s ðŸ”±"
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SRV_IP_AMV }}
        username: ${{ secrets.SRV_USER_AMV }}
        password: ${{ secrets.SRV_PASSWORD_AMV }}
        port: ${{ secrets.SRV_PORT_AMV }}
        script: |
          curl -sfL https://get.k3s.io | sh - &&
          sudo chmod 777 -R /etc/rancher/k3s &&
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

  helm:
    needs: [k3s]
    runs-on: ubuntu-latest
    steps:
    # Setting permissions
    - name: "Setting up helm ðŸ•¸"
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SRV_IP_AMV }}
        username: ${{ secrets.SRV_USER_AMV }}
        password: ${{ secrets.SRV_PASSWORD_AMV }}
        port: ${{ secrets.SRV_PORT_AMV }}
        script: |
          sudo snap install helm --classic
  
  database:
    needs: [helm]
    runs-on: ubuntu-latest
    steps:
    # Setting permissions
    - name: "Setting up ingress ðŸ“¥"
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SRV_IP_AMV }}
        username: ${{ secrets.SRV_USER_AMV }}
        password: ${{ secrets.SRV_PASSWORD_AMV }}
        port: ${{ secrets.SRV_PORT_AMV }}
        script: |
          if [ ! -d "${{ github.event.repository.name }}" ]; then
            git clone -b ${{ steps.vars.outputs.branch }} https://${{ secrets.GIT_USER }}:${{ secrets.GIT_PASSWORD }}@github.com/${{ github.repository }}.git
          fi
          
          cd /home/${{ secrets.SRV_USER_AMV }}/${{ github.event.repository.name }} && git fetch && git checkout ${{ steps.vars.outputs.branch }} && git pull
          mkdir /var/opt/mssql || echo "Alredy exists"
          sudo chmod -R 777 /var/opt/mssql
          cd /home/twist/${{ github.event.repository.name }}/database  && \
          kubectl apply -f namespace.yaml -n mssql && \
          kubectl apply -f secret.yaml -n mssql && \
          kubectl apply -f service.yaml -n mssql && \
          kubectl apply -f statefulset.yaml -n mssql

  ingress:
    needs: [database]
    runs-on: ubuntu-latest
    steps:
    # Setting permissions
    - name: "Setting up ingress ðŸ“¥"
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SRV_IP_AMV }}
        username: ${{ secrets.SRV_USER_AMV }}
        password: ${{ secrets.SRV_PASSWORD_AMV }}
        port: ${{ secrets.SRV_PORT_AMV }}
        script: |
          { # try
            helm upgrade --install ingress-nginx ingress-nginx \
            --repo https://kubernetes.github.io/ingress-nginx \
            --namespace ingress-nginx --create-namespace 
          } || { 
            # catch
            sudo kubectl config view --raw > ~/.kube/config &&
            helm upgrade --install ingress-nginx ingress-nginx \
            --repo https://kubernetes.github.io/ingress-nginx \
            --namespace ingress-nginx --create-namespace 
          }
  